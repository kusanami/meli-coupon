on: push
name: deploy
jobs:
  deploy:
    name: deploy app on EKS cluster
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@main
      - name: build and push to docker
        id: docker_build
        uses: docker/build-push-action@v1
        with:
          repository: ${{ github.repository }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: app
          tag_with_ref: true
          tag_with_sha: true
          tags: ${{ github.sha }},latest
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: create secret if not exists
        uses: kodermax/kubectl-aws-eks@master
        continue-on-error: true
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          DATABASE_SECRET: ${{ secrets.DATABASE_SECRET }}
          NAMESPACE: addi-ns
        with:
          args: create secret generic db-secret --from-literal=url=$DATABASE_SECRET -n $NAMESPACE
      - name: deployment if not exists
        uses: kodermax/kubectl-aws-eks@master
        continue-on-error: true
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: apply -f https://raw.githubusercontent.com/kusanami/addi-devop/master/deployment/workloads/deployment.yaml
      - name: update deployment
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          APP: addi-devops
          ECR_REGISTRY: kusanami
          IMAGE_TAG: ${{ github.sha }}
        with:
          args: set image deployment/addi-deployment -n addi-ns $APP=$ECR_REGISTRY/$APP:$IMAGE_TAG
      - name: verify deployment
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: rollout status deployment/addi-deployment -n addi-ns
      - name: Obtain service URL
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: get ingress -n addi-ns -o=custom-columns='URL:.status.loadBalancer.ingress[*].hostname'